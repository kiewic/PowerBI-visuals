{
    "compilerOptions": {
        "target": "es5",
        "suppressExcessPropertyErrors": true
    },
    "filesGlob": [
        "**/*.ts"
    ],
    "files": [
        "_references.ts",
        "dataView/rules/matrixEvalContext.ts",
        "contracts/dataShapeBinding.ts",
        "contracts/dataShapeBindingDataReduction.ts",
        "contracts/federatedConceptualSchema.ts",
        "contracts/query.ts",
        "contracts/queryProjection.ts",
        "contracts/selector.ts",
        "contracts/visualData.ts",
        "dataReader/dataReader.ts",
        "dataView/colorAllocator.ts",
        "dataView/compiledDataViewMapping.ts",
        "dataView/dataRoleHelper.ts",
        "dataView/dataViewAnalysis.ts",
        "dataView/dataViewBuilder.ts",
        "dataView/dataViewCategoricalReader.ts",
        "dataView/dataViewConcatenateCategoricalColumns.ts",
        "dataView/dataViewNormalizeValues.ts",
        "dataView/dataViewObject.ts",
        "dataView/dataViewObjectDefinition.ts",
        "dataView/dataViewObjectDescriptor.ts",
        "dataView/dataViewObjectEvaluationUtils.ts",
        "dataView/dataViewObjectEvaluator.ts",
        "dataView/dataViewPivotCategorical.ts",
        "dataView/dataViewPivotCategoricalToPrimaryGroups.ts",
        "dataView/dataViewPivotMatrix.ts",
        "dataView/dataViewScopeIdentity.ts",
        "dataView/dataViewScopeWildcard.ts",
        "dataView/dataViewSelfCrossJoin.ts",
        "dataView/dataViewTransform.ts",
        "dataView/rules/categoricalEvalContext.ts",
        "dataView/rules/colorRuleEvaluation.ts",
        "dataView/rules/evalContext.ts",
        "dataView/rules/filterRuleEvaluation.ts",
        "contracts/conceptualSchema.ts",
        "dataView/rules/ruleEvaluation.ts",
        "dataView/rules/staticEvalContext.ts",
        "dataView/scriptResultUtil.ts",
        "displayNameGetter.ts",
        "iFormattingService.ts",
        "segmentation/dataViewMerger.ts",
        "semanticQuery/exprPatterns/equalsToInRewriter.ts",
        "semanticQuery/exprPatterns/fieldExprPattern.ts",
        "semanticQuery/exprPatterns/filterScopeIdsCollector.ts",
        "semanticQuery/exprPatterns/scopeIdentityExtractor.ts",
        "semanticQuery/primitiveValueEncoding.ts",
        "semanticQuery/semanticQuery.ts",
        "semanticQuery/semanticQueryRewriter.ts",
        "semanticQuery/sqExpr.ts",
        "semanticQuery/sqExprGroupUtils.ts",
        "semanticQuery/sqExprRewriter.ts",
        "semanticQuery/sqExprUtils.ts",
        "semanticQuery/sqExprVisitor.ts",
        "semanticQuery/sqHierarchyExprUtils.ts",
        "services/formattingService.ts",
        "services/serialization/sqExprShortSerializer.ts",
        "typedefs/typedefs.obj.ts",
        "typedefs/typedefs.ts",
        "types/enumType.ts",
        "types/fill.ts",
        "types/fillRule.ts",
        "types/image.ts",
        "types/paragraphs.ts",
        "types/structuralType.ts",
        "types/valueType.ts"
    ]
}